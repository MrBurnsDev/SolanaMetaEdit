
üö® REPLIT PROMPT ‚Äî START FRESH, PRODUCTION-READY

You must STOP applying temporary workarounds. Build only production-ready code.

We are starting from scratch. Begin a brand new Next.js + Tailwind + shadcn/ui project. Do NOT reuse Vite or Express ‚Äî remove all legacy structures.

Follow this strict phased build plan:

‚∏ª

‚úÖ Phase 1 ‚Äî Scaffold + Wallet + Authority
	1.	Scaffold a clean Next.js app with Tailwind + shadcn/ui.
	‚Ä¢	Ensure all Tailwind classes exist (no border-border or invalid tokens).
	‚Ä¢	Confirm Replit‚Äôs deployment system will accept the build (npm run build && npm run start).
	‚Ä¢	NO index.html errors, NO vite.config, NO Express server.
	2.	Add Phantom wallet connection (solana-wallet-adapter).
	‚Ä¢	UI: Connect wallet button, show ‚úÖ connected.
	3.	Implement backend route /api/auth/verify:
	‚Ä¢	Input: { wallet, mint }
	‚Ä¢	Logic: Use UMI (@metaplex-foundation/mpl-token-metadata) to fetch PDA for metadata account and compare updateAuthority with connected wallet.
	‚Ä¢	Output: { authority: true/false }
	4.	UI Behavior:
	‚Ä¢	Anyone can view collections or NFTs (no blockers).
	‚Ä¢	If connected wallet has authority ‚Üí show ‚úÖ banner.
	‚Ä¢	If not ‚Üí show ‚ö†Ô∏è banner, but still allow viewing.
	‚Ä¢	Block changes only if wallet is not authority.

‚∏ª

‚ö†Ô∏è Critical Rules
	‚Ä¢	Do sanity checks before coding each step. If something will fail on Replit (e.g., Neon DB WebSocket not supported, Vite config leftover, bad Tailwind class), STOP and adjust.
	‚Ä¢	Do not move to Phase 2 until Phase 1 passes acceptance tests.
	‚Ä¢	Do not leave debug blockers or fallback storage. Authority checks must be on-chain.
	‚Ä¢	Use Alchemy RPC for all blockchain calls. I will provide API key. Helius may be added later as fallback, but Alchemy is primary.

‚∏ª

üéØ Acceptance Test for Phase 1

I will connect Phantom wallet and input a known mint (example: 3NF7v8NecF8AJAHs1HFjqxQpEdLpNpXutc9vRyY9yhGU).
	‚Ä¢	If my wallet is updateAuthority, /api/auth/verify must return authority: true.
	‚Ä¢	If not, it must return authority: false.
	‚Ä¢	UI must show ‚úÖ or ‚ö†Ô∏è accordingly.
	‚Ä¢	Viewing should always work. Editing should only be blocked when authority = false.

‚∏ª

üö® DO NOT PROCEED

Do not move to Phase 2 until Phase 1 passes 100%.
No assumptions, no hacks. If unclear, STOP and ask for clarification